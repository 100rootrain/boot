<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵핑될 DAO 인터페이스의 패키지명 포함 Full name으로 해당 mapper.xml 파일에 연결된다. -->
<mapper namespace="com.example.boot.dao.MaintenanceDAO">

    <select id="getStateList" resultType="map">
        SELECT COD_DESC
        FROM HD_CODE
        WHERE COD_TYPE='STATE'
        ORDER by COD_CODE
    </select>

    <select id="getMaintenanceList" parameterType="map" resultType="map">
        SELECT Z.*,
        CASE
        WHEN MNG_CODE_SUM = '총건수' THEN 0
        WHEN MNG_CODE_SUM = '소계' THEN 1
        ELSE 2
        END AS NEW_COLUMN
        FROM (
        SELECT
        CASE
        WHEN GROUPING(MNG_CODE) = 1 THEN '총건수'
        ELSE CASE WHEN GROUPING(MNG_CODE) = 0 AND Y.NO IS NULL THEN '소계' END
        END AS MNG_CODE_SUM,
        CASE
        WHEN GROUPING(MNG_CODE) = 1 THEN COUNT(MNG_CODE)
        ELSE CASE WHEN GROUPING(MNG_CODE) = 0 AND Y.NO IS NULL THEN COUNT(MNG_CODE) END
        END AS STGT,
        Y.MNG_CODE,
        Y.NO,
        Y.MNG_SEQ,
        Y.MNG_COMPANY,
        Y.MNG_PERSON,
        Y.MNG_CONTACT,
        Y.MNG_SITE,
        (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='SITE' AND COD_CODE=MNG_SITE) AS SITE_DESC,
        Y.MNG_BG,
        (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='BG' AND COD_CODE=MNG_BG) AS BG_DESC,
        Y.MNG_SYSTEM,
        (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='SYSTEM' AND COD_CODE=MNG_SYSTEM) AS SYSTEM_DESC,
        Y.MNG_TYPE,
        (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='TYPE' AND COD_CODE=MNG_TYPE) AS TYPE_DESC,
        Y.MNG_DESC_R,
        Y.MNG_DESC_S,
        Y.MNG_STATUS,
        Y.MNG_START,
        Y.MNG_CLOSE,
        Y.CREATE_DATE,
        Y.SAVE_DATE
        FROM (
        SELECT ROW_NUMBER() OVER (ORDER BY MNG_CODE DESC) AS NO, X.*
        FROM (SELECT
        MNG_CODE,
        MNG_SEQ,
        MNG_COMPANY,
        MNG_PERSON,
        MNG_CONTACT,
        MNG_SITE,
        MNG_BG,
        MNG_SYSTEM,
        MNG_TYPE,
        DBMS_LOB.SUBSTR(MNG_DESC_R, 200) AS MNG_DESC_R,
        DBMS_LOB.SUBSTR(MNG_DESC_S, 200) AS MNG_DESC_S,
        MNG_STATUS,
        MNG_START,
        MNG_CLOSE,
        CREATE_DATE,
        SAVE_DATE
        FROM HD_MANAGE
        WHERE MNG_CODE BETWEEN '${startPeriod}' AND '${endPeriod}'
        <if test="mngStatus != null and mngStatus !='ALL'">
            AND MNG_STATUS = '${mngStatus}'
            --N:작성, R:접수, S:처리중, Y:완료, D:보류
        </if>
        <if test="mngStatus == 'ALL'"> --전체검색

        </if>
        <if test="descSearch !=null and descSearch !=''">-- 대소문자 관계없이 검색
            AND (LOWER(DBMS_LOB.SUBSTR(MNG_DESC_R, 200)) LIKE '%'||LOWER('${descSearch}')||'%'
            OR LOWER(DBMS_LOB.SUBSTR(MNG_DESC_S, 200)) LIKE '%'||LOWER('${descSearch}')||'%')
        </if>
        <if test="descSearch ==null or descSearch ==''">--[검색어 입력없음]

        </if>
        -- AND MNG_SITE = '' &#45;&#45; SITE
        -- AND MNG_BG = '' &#45;&#45; BG
        -- AND MNG_SYSTEM = '' &#45;&#45;SYSTEM
        -- AND MNG_TYPE = '' &#45;&#45; TYPE
        -- AND MNG_COMPANY = '' &#45;&#45; 상호
        -- AND MNG_PERSON = '' &#45;&#45; 요청자
        -- AND MNG_CONTACT = '' &#45;&#45; 연락처
        ) X
        ) Y
        GROUP BY ROLLUP(
        Y.MNG_CODE,
        (Y.NO, Y.MNG_CODE, Y.MNG_SEQ, Y.MNG_COMPANY, Y.MNG_PERSON, Y.MNG_CONTACT, Y.MNG_SITE, Y.MNG_BG, Y.MNG_SYSTEM,
        Y.MNG_TYPE,
        Y.MNG_DESC_R, Y.MNG_DESC_S, Y.MNG_STATUS, Y.MNG_START, Y.MNG_CLOSE,
        Y.CREATE_DATE, Y.SAVE_DATE)
        )
        ) Z
        ORDER BY CASE WHEN Z.MNG_CODE_SUM = '총건수' THEN 1 ELSE 0 END, MNG_CODE DESC, NEW_COLUMN DESC, NO ASC


    </select>

<!--    <select id="getMaintenanceInfoPopup" parameterType="map" resultType="map">
        SELECT MNG_CODE,
               MNG_SEQ,
               MNG_COMPANY,
               MNG_PERSON,
               MNG_CONTACT,
               MNG_SITE,
               MNG_BG,
               MNG_SYSTEM,
               MNG_TYPE,
               DBMS_LOB.SUBSTR(MNG_DESC_R, DBMS_LOB.GETLENGTH(MNG_DESC_R)) AS MNG_DESC_R,
               DBMS_LOB.SUBSTR(MNG_DESC_S, DBMS_LOB.GETLENGTH(MNG_DESC_S)) AS MNG_DESC_S,
               MNG_STATUS,
               MNG_START,
               MNG_CLOSE,
               CREATE_DATE,
               SAVE_DATE
        FROM HD_MANAGE
        WHERE MNG_CODE = '${mngCode}'
          AND MNG_SEQ = '${mngSeq}'
    </select>-->

<!--    <resultMap type="HashMap" id="getMaintenanceInfoPopupResultMap">
        <result property="MNG_CODE" column="MNG_CODE" />
        <result property="MNG_SEQ" column="MNG_SEQ" />
        <result property="MNG_COMPANY" column="MNG_COMPANY" />
        <result property="MNG_PERSON" column="MNG_PERSON" />
        <result property="MNG_CONTACT" column="MNG_CONTACT" />
        <result property="MNG_SITE" column="MNG_SITE" />
        <result property="MNG_BG" column="MNG_BG" />
        <result property="MNG_SYSTEM" column="MNG_SYSTEM" />
        <result property="MNG_TYPE" column="MNG_TYPE" />
        <result property="MNG_DESC_R" column="MNG_DESC_R" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="MNG_DESC_S" column="MNG_DESC_S" jdbcType="CLOB" javaType="java.lang.String" />
        <result property="MNG_STATUS" column="MNG_STATUS" />
        <result property="MNG_START" column="MNG_START" />
        <result property="MNG_CLOSE" column="MNG_CLOSE" />
        <result property="CREATE_DATE" column="CREATE_DATE" />
        <result property="SAVE_DATE" column="SAVE_DATE" />
    </resultMap>-->

    <select id="getMaintenanceInfoPopup" parameterType="map" resultType="map">
        SELECT MNG_CODE,
               MNG_SEQ,
               MNG_COMPANY,
               MNG_PERSON,
               MNG_CONTACT,
               MNG_SITE,
               (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='SITE' AND COD_CODE=MNG_SITE) AS SITE_DESC,
               MNG_BG,
               (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='BG' AND COD_CODE=MNG_BG) AS BG_DESC,
               MNG_SYSTEM,
               (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='SYSTEM' AND COD_CODE=MNG_SYSTEM) AS SYSTEM_DESC,
               MNG_TYPE,
               (SELECT COD_DESC FROM HD_CODE WHERE COD_TYPE='TYPE' AND COD_CODE=MNG_TYPE) AS TYPE_DESC,
               DBMS_LOB.SUBSTR(MNG_DESC_R, DBMS_LOB.GETLENGTH(MNG_DESC_R)) AS MNG_DESC_R,
               DBMS_LOB.SUBSTR(MNG_DESC_S, DBMS_LOB.GETLENGTH(MNG_DESC_S)) AS MNG_DESC_S,
               MNG_STATUS,
               MNG_START,
               MNG_CLOSE,
               CREATE_DATE,
               SAVE_DATE
        FROM HD_MANAGE
        WHERE MNG_CODE = '${mngCode}'
          AND MNG_SEQ = '${mngSeq}'
    </select>
    <select id="getMaintenanceCodeList" parameterType="map" resultType="map">
        SELECT ROW_NUMBER() OVER (ORDER BY COD_CODE ASC) AS NO,
       COD_TYPE, COD_CODE, COD_DESC, TO_CHAR(SAVE_DATE, 'YYYY-MM-DD') AS SAVE_DATE
        FROM hd_code
        WHERE COD_TYPE = '${codeType}'
    </select>
<!--1.서비스단에서 for문 돌리는방법
    <update id="insertMaintenanceCodeList" parameterType="map">
        MERGE INTO HD_CODE A&#45;&#45; 대상 테이블 &ndash;&gt;
            USING (SELECT '${codCode}'  COD_CODE,
                          '${codDesc}'  COD_DESC,
                          '${saveDate}' SAVE_DATE
                   FROM DUAL) B &#45;&#45; 넣을 데이터 &ndash;&gt;

            ON (COD_TYPE = '${codType}')
            WHEN MATCHED THEN
                UPDATE
                    SET
                        A.COD_CODE = B.COD_CODE,
                        A.COD_DESC = B.COD_DESC,
                        A.SAVE_DATE = B.SAVE_DATE WHERE A.COD_TYPE = '${codType}' AND A.COD_CODE='${codCode}'
            WHEN NOT MATCHED THEN
        INSERT (COD_TYPE,A.COD_CODE, A.COD_DESC, A.SAVE_DATE)
        VALUES ('${codType}',B.COD_CODE, B.COD_DESC, SYSDATE)
    </update>
-->
    <!--2.Mybatis에서 foreach로 처리하기[INSERT INTO]-->
    <update id="insertMaintenanceCodeList" parameterType="java.util.ArrayList">

            MERGE INTO HD_CODE A
            USING (
        <foreach collection="list" item="item" separator="UNION">
            SELECT #{item.codType} AS COD_TYPE, #{item.codCode} AS COD_CODE, #{item.codDesc} AS COD_DESC, #{item.saveDate} AS SAVE_DATE
            FROM DUAL
        </foreach>
            ) B
            ON (A.COD_TYPE = B.COD_TYPE AND A.COD_CODE = B.COD_CODE)
            WHEN MATCHED THEN
            UPDATE
            SET A.COD_DESC = B.COD_DESC,
            A.SAVE_DATE = B.SAVE_DATE
        WHEN NOT MATCHED THEN
        INSERT (COD_TYPE,A.COD_CODE, A.COD_DESC, A.SAVE_DATE)
        VALUES (B.COD_TYPE,B.COD_CODE, B.COD_DESC, SYSDATE)

    </update>


    <update id="insertMaintenanceInfoPopup" parameterType="map">

        UPDATE HD_MANAGE
        SET MNG_COMPANY = '${mngCompany}',
            MNG_CONTACT = '${mngContact}',
            MNG_SITE    = '${mngSite}',
            MNG_BG      = '${mngBg}',
            MNG_PERSON = '${mngPerson}',
            MNG_SYSTEM  = '${mngSystem}',
            MNG_TYPE    = '${mngType}',
            MNG_DESC_R  = '${mngDescR}',
            MNG_DESC_S  = '${mngDescS}',
            MNG_STATUS  = '${mngStatus}'
        WHERE MNG_CODE = '${mngCode}'
          AND MNG_SEQ = '${mngSeq}'

    </update>

    <!--회사, 요청자, 연락처 조회 팝업-->
    <select id="getMaintenancePopupCodeList" parameterType="map" resultType="map">
        SELECT ROW_NUMBER() OVER (ORDER BY MNG_CODE DESC) AS NO, X.*
        FROM (SELECT DISTINCT MNG_COMPANY, MNG_PERSON, MNG_CONTACT, MNG_CODE
            FROM HD_MANAGE
        <where>
            <if test="mngCompany != null and mngCompany != ''">
                AND MNG_COMPANY LIKE '%' || '${mngCompany}' || '%'
            </if>
            <if test="mngPerson != null and mngPerson != ''">
                AND MNG_PERSON LIKE '%' || '${mngPerson}' || '%'
            </if>
            <if test="mngContact != null and mngContact != ''">
                AND MNG_CONTACT LIKE '%' || '${mngContact}' || '%'
            </if>
        </where>
            ORDER BY MNG_CODE DESC) X
    </select>


</mapper>
